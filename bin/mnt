#!/bin/sh

# Running from i3 key?
if [[ $1 == "i3" ]]; then
    i3-msg floating enable
fi

# Global variables
TITLE="Mount Utility"

# Populate list of mountable devices
deviceSources=$(ls /dev | grep "sd[b-z]\|sda3")
deviceCount=$(echo $deviceSources | wc -w)

# Start of program output
clear
echo $TITLE

# Are there any devices?
if [[ $deviceCount == 0 ]]; then
    read -p "No devices, exiting ..." input
    exit 1
fi

# Display list of devices that can be unmounted
for ((device=1; device<=${deviceCount}; device+=1))
do
    curSource="/dev/"$(echo $deviceSources | cut -d " " -f${device})
    printf "%4s)   %-13s\n" ${device} ${curSource}
done

printf "%4s)   Exit\n" "x"

# Get input from user
read -p "Choose a menu option: " input

# Input validation
if [ "$input" = "X" ] || [ "$input" = "x" ]
then
    echo "Exiting"
    exit 0
fi

if (( $input>0 )) && (( $input<=$deviceCount ))
then
    tomount="/dev/"$(echo ${deviceSources} | cut -d " " -f${input})
    echo -e "\nMounting: \e[1;33m${tomount}\e[0m ..."
    if [[ ${tomount} == "/dev/sda3" ]]; then
        if (sudo udevil mount ${tomount}); then
            if [[ $1 == "i3" ]]; then
                read -p "Exit: " input
                exit 0
            else
                exit 0
            fi
        fi
    else
        if (udevil mount ${tomount}); then
            if [[ $1 == "i3" ]]; then
                read -p "Exit: " input
                exit 0
            else
                exit 0
            fi
        fi
    fi
fi
echo -e "\e[31mInvalid menu choice\e[0m"
read -p "Restart (y/n): " input
if [[ $input == y ]] || [[ $input == Y ]] || [[ $input == j ]] || [[ $input == J ]]; then
    $0
    exit 0
else
    exit 1
fi
