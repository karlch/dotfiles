# i3 config file (v4)

# General settings {{{
set $mod Mod1

# Font for window titles
font pango: Source Sans Pro Regular 8

# Window borders
new_window pixel 2
new_float normal

# Color settings
client.focused          #00C1FF #00C1FF #000088 #00C1FF
client.focused_inactive #3C3C3C #3C3C3C #FFFFFF #3C3C3C
client.unfocused        #3C3C3C #3C3C3C #FFFFFF #3C3C3C
client.urgent           #00C1FF #00C1FF #000088 #00C1FF

# Enable workspace back and forth
workspace_auto_back_and_forth yes
focus_on_window_activation focus

# Do not follow the mouse
focus_follows_mouse no

# Floating stuff
floating_modifier $mod
floating_minimum_size 300 x 200
floating_maximum_size 1920 x 1080
bindsym $mod+space move position mouse

# }}}

# General keybindings {{{

bindsym $mod+a exec lighthouse | sh
# Changing windows with the same command in vim, tmux and i3
bindsym $mod+h exec ~/bin/tmux_navigate.sh h
bindsym $mod+l exec ~/bin/tmux_navigate.sh l
bindsym $mod+j exec ~/bin/tmux_navigate.sh j
bindsym $mod+k exec ~/bin/tmux_navigate.sh k
# Open dmenu with a list of open windows
bindsym $mod+Tab exec --no-startup-id ~/.i3/py-scripts/winmenu.py, mode "default"

# Moving windows
bindsym mod4+h move left
bindsym mod4+l move right 
bindsym mod4+j move down
bindsym mod4+k move up

# Window stuff
bindsym $mod+m focus mode_toggle
bindsym Control+q kill
bindsym Control+m fullscreen

# Function keys
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 5 -time 0 -steps 1 && ~/.i3/brightness-show.sh
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 5 -time 0 -steps 1 && ~/.i3/brightness-show.sh
bindsym XF86AudioLowerVolume exec --no-startup-id amixer set Master 4%- && ~/.i3/volnoti-set.sh
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer set Master 4%+ && ~/.i3/volnoti-set.sh
bindsym XF86AudioMute exec --no-startup-id amixer set Master toggle && ~/.i3/volnoti-set.sh
# bindsym XF86AudioPlay exec --no-startup-id cmus-remote -u
# bindsym XF86AudioStop exec --no-startup-id cmus-remote -s
# bindsym XF86AudioNext exec --no-startup-id cmus-remote -n
# bindsym XF86AudioPrev exec --no-startup-id cmus-remote -r
bindsym XF86AudioPlay exec --no-startup-id mpc toggle
bindsym XF86AudioStop exec --no-startup-id mpc stop
bindsym XF86AudioNext exec --no-startup-id mpc next
bindsym XF86AudioPrev exec --no-startup-id mpc prev

# Screenshot
bindsym --release Insert exec --no-startup-id import -window root ~/Bilder/Screenshot/scrot-$(date +%F_%H:%M:%S).png
bindsym --release Control+Insert exec --no-startup-id import ~/Bilder/Screenshot/scrot-$(date +%F_%H:%M:%S).png
bindsym --release Shift+Insert exec --no-startup-id import -window $(xdotool getactivewindow) ~/Bilder/Screenshot/scrot-$(date +%F_%H:%M:%S).png

# Enter normal mode
bindsym F10 mode "NORMAL"
# Open dmenu
bindsym F11 exec --no-startup-id i3-dmenu-desktop --entry-type='command' --dmenu='dmenu -l 25 -w 250  -i -b -y 21 -p → -fn SourceCodePro -nb #2C2C2C -nf #00C1FF -sb #00A0DD -sf #EEEEEE', mode "default"
# Search with dmenu
bindsym Shift+F11 exec --no-startup-id ~/bin/search.sh

# }}}

# Window handling {{{
# Floating
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="dialog"] floating enable
for_window [window_role="menu"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [class="com-wolfram-jlink-Reader"] floating enable
for_window [class="Gifview"] floating enable
for_window [class="LIGHTHOUSE"] floating enable
# for_window [class="Vimiv"] floating enable
# Matlab in tabs
for_window [class="MATLAB R2015a - academic use"] focus, layout tabbed
# Cmus cover should be small
for_window [title="sxiv - cover.jpg"] resize shrink width 100 px or 20 ppt

# }}}

# Everything else in a vi like normal mode {{{
mode "NORMAL" {
    # Resizing windows (like in tmux)
    bindsym h exec ~/bin/resize.sh h
    bindsym k exec ~/bin/resize.sh k
    bindsym j exec ~/bin/resize.sh j
    bindsym l exec ~/bin/resize.sh l
    bindsym Shift+h exec ~/bin/resize2.sh h
    bindsym Shift+k exec ~/bin/resize2.sh k
    bindsym Shift+j exec ~/bin/resize2.sh j
    bindsym Shift+l exec ~/bin/resize2.sh l

    # Kill a window
    bindsym x kill
    # Kill all windows
    bindsym Shift+x exec --no-startup-id ~/.i3/py-scripts/closeall.py

    # dmenu
    bindsym d exec --no-startup-id i3-dmenu-desktop --entry-type='command' --dmenu='dmenu -l 25 -w 250  -i -b -y 21 -p → -fn SourceCodePro -nb #2C2C2C -nf #00C1FF -sb #00A0DD -sf #EEEEEE', mode "default"
    # Search duckduckgo with dmenu
    bindsym space exec --no-startup-id ~/bin/winfocus.sh, mode "default"

    # Split in horizontal orientation
    bindsym s split v
    # Split in vertical orientation
    bindsym v split h

    # Enter fullscreen mode for the focused container
    bindsym m fullscreen

    # Change container layout (stacked, tabbed, toggle split)
    bindsym Shift+s layout stacking
    bindsym Shift+t layout tabbed
    bindsym Shift+c layout toggle split
    bindsym Shift+d layout default
    bindsym Shift+a layout toggle all

    # Toggle tiling / floating
    bindsym Shift+f floating toggle
    # Change focus between tiling / floating windows
    bindsym Shift+m focus mode_toggle

    # Move window to scratchpad
    bindsym y move scratchpad
    # Get the scratchpad window
    bindsym Shift+y scratchpad show

    # Focus the parent container
    bindsym p focus parent
    # Focus the child container
    bindsym n focus child

    # Switch to workspace
    bindsym 1 workspace 1, exec xdotool click 4 && xdotool click 5
    bindsym 2 workspace 2, exec xdotool click 4 && xdotool click 5
    bindsym 3 workspace 3, exec xdotool click 4 && xdotool click 5
    bindsym 4 workspace 4, exec xdotool click 4 && xdotool click 5
    bindsym 5 workspace 5, exec xdotool click 4 && xdotool click 5
    bindsym 6 workspace 6, exec xdotool click 4 && xdotool click 5
    bindsym 7 workspace 7, exec xdotool click 4 && xdotool click 5
    bindsym 8 workspace 8, exec xdotool click 4 && xdotool click 5
    bindsym 9 workspace 9, exec xdotool click 4 && xdotool click 5
    bindsym 0 workspace 10, exec xdotool click 4 && xdotool click 5

    # Move focused container to workspace
    bindsym Shift+1 move container to workspace 1
    bindsym Shift+2 move container to workspace 2
    bindsym Shift+3 move container to workspace 3
    bindsym Shift+4 move container to workspace 4
    bindsym Shift+5 move container to workspace 5
    bindsym Shift+6 move container to workspace 6
    bindsym Shift+7 move container to workspace 7
    bindsym Shift+8 move container to workspace 8
    bindsym Shift+9 move container to workspace 9
    bindsym Shift+0 move container to workspace 10

    # Move container and focus to workspace
    bindsym Control+1 move container to workspace 1, workspace 1
    bindsym Control+2 move container to workspace 2, workspace 2
    bindsym Control+3 move container to workspace 3, workspace 3
    bindsym Control+4 move container to workspace 4, workspace 4
    bindsym Control+5 move container to workspace 5, workspace 5
    bindsym Control+6 move container to workspace 6, workspace 6
    bindsym Control+7 move container to workspace 7, workspace 7
    bindsym Control+8 move container to workspace 8, workspace 8
    bindsym Control+9 move container to workspace 9, workspace 9
    bindsym Control+0 move container to workspace 10, workspace 10

    # Move workspace to outputs
    bindsym Control+$mod+1 move workspace 1 output eDP1
    bindsym Control+$mod+2 move workspace 2 output eDP1
    bindsym Control+$mod+3 move workspace 3 output eDP1
    bindsym Control+$mod+4 move workspace 4 output eDP1
    bindsym Control+$mod+5 move workspace 5 output eDP1
    bindsym Control+$mod+6 move workspace 6 output eDP1
    bindsym Control+$mod+7 move workspace 7 output eDP1
    bindsym Control+$mod+8 move workspace 8 output eDP1
    bindsym Control+$mod+9 move workspace 9 output eDP1
    bindsym Control+$mod+0 move workspace 10 output eDP1

    bindsym Control+Mod4+1 move workspace 1 output eDP1
    bindsym Control+Mod4+2 move workspace 2 output eDP1
    bindsym Control+Mod4+3 move workspace 3 output eDP1
    bindsym Control+Mod4+4 move workspace 4 output eDP1
    bindsym Control+Mod4+5 move workspace 5 output eDP1
    bindsym Control+Mod4+6 move workspace 6 output eDP1
    bindsym Control+Mod4+7 move workspace 7 output eDP1
    bindsym Control+Mod4+8 move workspace 8 output eDP1
    bindsym Control+Mod4+9 move workspace 9 output eDP1
    bindsym Control+Mod4+0 move workspace 10 output eDP1

    # Intelligent movement
    # A window list to focus a window
    bindsym g exec --no-startup-id ~/.i3/py-scripts/winmenu.py, mode "default"
    # A window list to get a window
    bindsym Shift+g exec --no-startup-id ~/.i3/py-scripts/winmenuget.py, mode "default"
    # Go to next empty workspace
    bindsym o exec --no-startup-id ~/.i3/py-scripts/firstfree.py
    # Move window to next empty workspace
    bindsym Shift+o exec --no-startup-id ~/.i3/py-scripts/wintofirstfree.py
    # Go to next empty workspace with the window
    bindsym Control+o exec --no-startup-id ~/.i3/py-scripts/wintofirstfree-go.py
    # Moving back and forth between the last workspace
    bindsym Tab workspace back_and_forth
    bindsym Control+Tab move container to workspace back_and_forth; workspace back_and_forth
    bindsym Shift+Tab move container to workspace back_and_forth

    # Useless but fun
    bindsym Shift+b exec --no-startup-id ~/.i3/py-scripts/fibonacci.py

    # Reload the configuration file
    bindsym r reload, mode "default"
    # Restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym Shift+r restart

    # Starters
    bindsym w mode "default", exec qutebrowser && cat /dev/null > ~/.local/share/qutebrowser/history 
    bindsym t exec --no-startup-id urxvt, mode "default"
    # bindsym t exec --no-startup-id urxvt -e tmux, mode "default"
    bindsym f exec --no-startup-id urxvt -e ranger, mode "default"
    # bindsym c exec --no-startup-id ~/bin/cmus_cover.sh & urxvt -e cmus, mode "default"
    bindsym c exec --no-startup-id urxvt -e ncmpcpp, mode "default"
    bindsym z exec --no-startup-id urxvt -e mutt, mode "default"
    bindsym Shift+z exec env GTK2_RC_FILES=/usr/share/themes/Raleigh/gtk-2.0/gtkrc firefox-nightly www.protonmail.ch/login, mode "default"

    # Shutdown, reboot, lock screen ..
    bindsym q mode "$system"

    # Change the borders
    bindsym odiaeresis mode "Borders"

    # Wireless mode
    bindsym Shift+w mode "$Wireless"

    # USB mode
    bindsym Shift+u mode "$USB"

    # Monitor mode
    bindsym e mode "$MONITOR"

    # Back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym F10 mode "default"

    # Make the Rest return
    # Append window to the next workspace
    bindsym a mode "default"
    bindsym b mode "default"

    bindsym Shift+e mode "default"
    bindsym Shift+i mode "default"
    bindsym Shift+n mode "default"
    bindsym Shift+p mode "default"
    bindsym Shift+q mode "default"
    bindsym Shift+v mode "default"

}
# }}}

# A system mode for shutting down, ... {{{
set $SYSTEM System ... logout (l), reboot (r), shutdown (s), suspend (S), blank (b)
mode "$SYSTEM" {
    # Logout
    bindsym l exec --no-startup-id i3-msg exit, mode "default"
    # Reboot
    bindsym r exec reboot, mode "default"
    # Shutdown
    bindsym s exec poweroff, mode "default"
    # Suspend
    bindsym Shift+s exec systemctl suspend, mode "default"
    # Blank screen
    bindsym b exec xset dpms force off, mode "default"

    # Back to normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# }}}

# Various other modes {{{
set $Wireless Wifi ... block (b), unblock (u), wifi-menu (w)
mode "$Wireless" {
    # Wifi
    bindsym b exec "rfkill block wifi", mode "default"
    bindsym u exec rfkill unblock wifi && urxvt -e systemctl restart netctl-auto@wlp1s0.service & sleep 0.1 && i3-msg floating enable, mode "default"
    bindsym w exec "urxvt -e sudo wifi-menu & sleep 0.3 && i3-msg floating enable", mode "default"

    # Back to normal: Escape
    bindsym Escape mode "default"
}

set $USB USB devices ... mount (m), unmount (u)
mode "$USB" {
    # USB
    bindsym m exec ~/bin/mnt-i3, mode "default"
    bindsym u exec ~/bin/umnt-i3, mode "default"

    # Back to normal: Escape
    bindsym Escape mode "default"
}

# Configuring multiple monitors
set $MONITOR Monitors ... Laptop (l), Main (m)
mode "$MONITOR" {
    # Entering the screens
    bindsym l mode "$LAPTOP"
    bindsym m mode "$MAIN"

    # Back to normal: Escape
    bindsym Escape mode "default"
}

set $LAPTOP left (l), right (r), same (s), off (o)
mode "$LAPTOP" {
   # Different xrandr configurations 
   bindsym l exec xrandr --output eDP1 --auto --left-of HDMI1, mode "default"
   bindsym r exec xrandr --output eDP1 --auto --right-of HDMI1, mode "default"
   bindsym s exec xrandr --output eDP1 --auto --same-as HDMI1, mode "default"
   bindsym o exec xrandr --output eDP1 --off, mode "default"
   bindsym Escape mode "default"
}

set $MAIN left (l), right (r), same (s), off (o)
mode "$MAIN" {
   # Different xrandr configurations 
   bindsym l exec xrandr --output HDMI1 --auto --left-of eDP1, mode "default"
   bindsym r exec xrandr --output HDMI1 --auto --right-of eDP1, mode "default"
   bindsym s exec xrandr --output HDMI1 --same-as eDP1, mode "default"
   bindsym o exec xrandr --output HDMI1 --off, mode "default"
   bindsym Escape mode "default"
}

# A cycle mode, used with cycle.py
mode "Cycle" {
    # Accept window with space, enter or escape
    bindsym Return exec "killall cycle.py", mode "default"
    bindsym space exec "killall cycle.py", mode "default"
    bindsym Escape exec "killall cycle.py", mode "default"
}

# A mode to change the borders and gaps
mode "Borders" {
    # The different borders I use from time to time
    bindsym 1 border 1pixel
    bindsym 2 border pixel 2
    bindsym 3 border pixel 3
    bindsym 4 border pixel 4
    bindsym 0 border none
    bindsym asciicircum border normal

    # Back to normal: Escape
    bindsym Escape mode "default"
}
# }}}

# Start i3bar to display a workspace bar {{{
bar {
        status_command ~/.i3/conkybar.sh

        # Do not allow applications to use the bar as icon tray
        tray_output none

        colors{
            background #2C2C2C
            statusline #00C1FF
            separator #00C1FF
            #                  BORDER  BACKGR. TEXT
            focused_workspace  #2C2C2C #2C2C2C #00C1FF
            active_workspace   #2C2C2C #2C2C2C #0066AA
            inactive_workspace #2C2C2C #2C2C2C #EEEEEE
            urgent_workspace   #00FF00 #2C2C2C #00FF00
            binding_mode       #2C2C2C #2C2C2C #EEEEEE
        }

        # Font for the bar
        font pango:Source Code Pro Bold 11

        # Mouse bindings are annoying
        bindsym button4 exec :
        bindsym button5 exec :

}
# }}}

# vim:foldmethod=marker:foldlevel=0
