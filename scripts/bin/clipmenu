#!/bin/bash

shopt -s nullglob

# We use this to make sure the cache files are sorted bytewise
LC_COLLATE=C

# Some people copy/paste huge swathes of text that could slow down dmenu
line_length_limit=500

declare -A selections
ordered_selections=()

fildir=("/tmp/clipmenu.$USER/")

# All files in directory
files=("/tmp/clipmenu.$USER/"*)

# We can't use `for ... in` here because we need to add files to
# ordered_selections from last to first -- that is, newest to oldest. Incoming
# clipboard entries have a ISO datetime prefixed to the front to aid in this.
for (( i=${#files[@]}-1; i>=0; i-- )); do
    file=${files[$i]}

    # We look for the first line matching regex /./ here because we want the
    # first line that can provide reasonable context to the user. That is, if
    # you have 5 leading lines of whitespace, displaying " (6 lines)" is much
    # less useful than displaying "foo (6 lines)", where "foo" is the first
    # line in the entry with actionable context.
    first_line=$(sed -n '/./{p;q}' "$file" | cut -c1-"$line_length_limit")
    lines=$(wc -l < "$file")

    if (( lines > 1 )); then
        first_line+=" ($lines lines)"
    fi

    ordered_selections+=("$first_line")
    if [[ -z ${first_line} ]]; then
        selections[$first_line]=$file
    fi
done

# Echo all ordered lines into rofi with only one column (lines might be long)
# Save the chosen one and continue if it is valid
chosen_line=$(printf '%s\n' "${ordered_selections[@]}" | rofi -dmenu -columns 1 "$@")

[[ $chosen_line ]] || exit 1

# Enter the chosen line into the clipboard
for selection in clipboard primary; do
    xsel -i --"$selection" < "${selections[$chosen_line]}"
done

