# vim:ft=zsh
# File to save custom functions

# ls right after cd
function chpwd()
{
    emulate -L zsh
    ls
}

# command not found
function command_not_found_handler() {
    printf "\nDonâ€™t pretend you want to talk to me, I know you hate me.\n" 
    printf "So you really want me to search the database? [nye]: "
    stty raw && search=$(dd bs=1 count=1 2>/dev/null) && stty -raw
    if [[ $search == "y" || $search == "Y" ]]; then
        info=$(pacaur -Ss $0 | head)
        if test -n ${info}; then
            printf "\n%s\n\n" ${info}
            printf "Here I am, brain the size of a planet, and you ask me search the database? Call that job satisfaction, 'cause I don't.\n"
        fi
    elif [[ $search == "e" || $search == "E" ]]; then
        print -z $@
    else
        sed -i '$d' ~/.zsh_history
        printf "\nI think you ought to know I'm feeling very depressed.\n"
    fi
}

# vim with server if necessary
function vim {
    eval last=\$$#
    if echo $last | grep "\.tex" > /dev/null; then
        NVIM_LISTEN_ADDRESS=/tmp/nvim_texsocket nvim $@
    else
        NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim $@
    fi
}

# favourite command
function favcmd() {
    history|awk '{print $2}'|awk 'BEGIN {FS="|"} {print $1}'|sort|uniq -c|sort -rn|head -$1
}

# Create directory and enter it
function mkcd(){ mkdir "$1" && cd "$1" ; }

# Image renaming
function listjpg(){ autoload -U zmv && c=1 base="$1" zmv '*.JPG||*.jpg' '${base}_${(l:3::0:)$((c++))}.jpg' ; }
function listall(){ autoload -U zmv && c=1 base="$1" end="$2" zmv '*' '${base}_${(l:3::0:)$((c++))}.${end}' ; }

# Mathematica kernel to solve input
function m() {
echo $@ | math | grep "Out" | cut -d " " -f2
}

# Nice short cpu process overview
function pscpu() {
    ps -e -o pcpu,cpu,nice,state,cputime,args | sort -k1 -nr | head -n 3 | awk '{print $1"%  "$5"  "$6" "$7}'
}

# Remove all spaces
function killws() {
    for a in ./**/*\ *(Dod); do 
    printf "Clean $a? (Y/n): " && read input
    if [[ $input == "Y" || $input == "y" ]]; then
        mv $a ${a:h}/${a:t:gs/ /_};
        echo "Cleaned $a"
    else
        echo "Ignored $a"
    fi
    done
}

# Up we go (nicer than ...)
function up() {
    for (( i = 0; i < $1; i++ )); do
        cd .. 1>/dev/null
    done
    ls
}

# Download src via cower nicely
function cowd() {
    \cd ~/src
    mkdir $1
    \cd $1
    cower -dd $@
    ls
}

# Value of an alias
function alias_value() {
    alias "$1" | sed "s/^$1='\(.*\)'$/\1/"
}

# All commands
function ListAllCommands
{
    echo -n $PATH | xargs -d : -I {} find {} -maxdepth 1 \
            -executable -type f -printf '%P\n' | sort -u
}

# Precmd to bell when a command is done
function precmd() {
    printf "\a"
}
function zsh_stats() {
    fc -l 1 | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n20
}

# Quick github clone
function gitc() {
    git clone "https://github.com/$1/$2"
}

# Persistent loop
function pers_loop() {
    while true; do
        ${*:2}
        sleep $1
    done
}
