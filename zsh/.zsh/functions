# vim:ft=zsh
# File to save custom functions

function igf() {
    idle GetFile $1@FirstTritium.katrin > $1
}

# ls right after cd
function chpwd() {
    emulate -L zsh
    ls
}

# command not found
command_not_found_handler() {
    local pkgs cmd="$1"
    pkgs=(${(f)"$(pkgfile -b -v -- "$cmd" 2>/dev/null)"})
    if [[ -n "$pkgs" ]]; then
        printf "Here I am, brain the size of a planet, and you make me search the database? Call that job satisfaction, 'cause I don't.\n\n"
        printf "  %s\n\n" $pkgs[@]
        return 0
    fi
    sed -i '$d' ~/.zsh_history
    printf "I think you ought to know I'm feeling very depressed.\n" 1>&2
    return 127
}

# vim with server if necessary
function vim {
    eval last=\$$#
    if echo "$last" | grep "\.tex" > /dev/null; then
        NVIM_LISTEN_ADDRESS=/tmp/nvim_texsocket nvim "$@"
    else
        NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim "$@"
    fi
}

# favourite command
function favcmd() {
    history | awk '{print $2}' | awk 'BEGIN {FS="|"} {print $1}' | \
        sort | uniq -c | sort -rn | head -n "$1"
}

# Create directory and enter it
function mkcd() {
    mkdir "$1" && cd "$1"
}

# Image renaming
function listjpg(){ autoload -U zmv && c=1 base="$1" zmv '*.JPG||*.jpg' '${base}_${(l:3::0:)$((c++))}.jpg' ; }
function listall(){ autoload -U zmv && c=1 base="$1" end="$2" zmv '*' '${base}_${(l:3::0:)$((c++))}.${end}' ; }

# Nice short cpu process overview
function pscpu() {
    ps -e -o pcpu,cpu,nice,state,cputime,args | sort -k1 -nr | head -n 3 | awk '{print $1"%  "$5"  "$6" "$7}'
}

# Remove all spaces
function killws() {
    for f in ./**/*\ *(Dod); do 
        printf "Clean %s? (Y/n): " "$f" && read -r input
        if [[ $input == "Y" || $input == "y" ]]; then
            mv "$f" "${f:h}"/"${f:t:gs/ /_}";
            printf "Cleaned %s\n" "$f"
        else
            printf "Ignored %s\n" "$f"
        fi
    done
}

function killws_all() {
    for f in ./**/*\ *(Dod); do 
        if [[ -f ${f:h}/${f:t:gs/ /_} ]]; then
            mv "$f" "${f:h}/${f:t:gs/ /_/:s/./_2.}"
        else
            mv "$f" "${f:h}/${f:t:gs/ /_}"
        fi
    done
}

# Up we go (nicer than ...)
function up() {
    for (( i = 0; i < $1; i++ )); do
        cd .. 1>/dev/null || return
    done
    ls
}

# Precmd to bell when a command is done
function precmd() {
    printf "\a"
}

# Quick github clone
function gitc() {
    git clone "https://github.com/$1/$2"
}

# Persistent loop
function pers_loop() {
    while true; do
        ${*:2}
        sleep "$1"
    done
}

# Run a command in Xvfb as xvfb-run does not work for e.g. Gtk3 applications
function run_42() {
    Xvfb :42 -screen 0 800x600x24 1>/dev/null 2>&1 & xvfb_pid="$!"
    DISPLAY=":42" "$@"
    kill "$xvfb_pid"
}

# Kill all tmux sessions except default
# I use this instead of tmux kill-server to always have one session loaded which
# greatly improves the startup time of my terminal
function tks() {
    for session in $(tmux list-sessions -F '#S'); do
        if [[ $session != "default" ]]; then
            tmux kill-session -t $session
        fi
    done
}

function h5read() {
    h5dump -m '%.4f' $@ | less
}

function mp3towav(){
    [[ $# -eq 0 ]] && { echo "mp3wav mp3file"; exit 1; }
    for i in "$@"
    do
        # create .wav file name
        local out="${i%.*}.wav"
        [[ -f "$i" ]] && { echo -n "Processing ${i}..."; mpg123 -w "${out}" "$i" &>/dev/null  && echo "done." || echo "failed."; }
    done	
}
