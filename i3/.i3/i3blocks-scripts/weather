#!/usr/bin/env python3
# vim: ft=python fileencoding=utf-8 sw=4 et sts=4 

import os
import re
import sys
from subprocess import getoutput

def get_location():
    cmd = "bash < " + os.path.expanduser("~/.i3/info/getlocation.sh")
    return getoutput(cmd)

def get_weather_information(location):
    # Get output
    cmd = "curl -s http://rss.accuweather.com/rss/liveweather_rss.asp\?metric\=1\&locCode\=%s" % (location)
    output = getoutput(cmd)
    if not output:
        return "", ""
    lines = output.split("\n")
    # Get weather and temperature
    for line in lines:
        if "Currently" in line:
            info = line
            break
    info = info.lstrip().replace("</title>", "").split()[1:]
    weather = " ".join(info[:-1])
    temperature = info[-1].rstrip("C")
    return weather.lower(), int(temperature)

def get_formatted_weather(weather, temperature):
    color = "#CCCCCC"
    icon = weather
    if "sun" in weather:
        icon = ""
        color = "#F3FF0D"
    elif "rain" in weather or "shower" in weather:
        icon = ""
        color = "#6B93BB"
    elif "cloud" in weather or "overcast" in weather:
        icon = ""
        color = "#AAAAAA"
    elif "mist" in weather or "fog" in weather or "haze" in weather:
        icon = ""
        color = "#FFFFFF"
    elif "clear" in weather:
        icon = ""
        color = "#FFFFFF"
    elif "snow" in weather:
        icon = ""
        color = "#FFFFFF"
    formatted_weather = \
        "<span foreground='%s' font='Weather Icons Bold'>%s  </span>%.0f°" \
        % (color, icon, temperature)
    return formatted_weather

if __name__ == "__main__":
    location = get_location()
    # Handle block buttons
    if "BLOCK_BUTTON" in os.environ and os.environ["BLOCK_BUTTON"] == "1":
        script = os.path.expanduser("~/.i3/i3blocks-scripts/weather_script")
        cmd = "st -g 125x41 -n floating -e " + script + " " + location
        os.system(cmd)
    # Print weather info
    weather, temperature = get_weather_information(location)
    if weather:
        formatted_weather = get_formatted_weather(weather, temperature)
        print(formatted_weather)
        # Color of temperature
        if temperature < 0:
            print("\n#AFD7FF")
        elif temperature > 20:
            print("\n#F3FF0D")
    else:
        print("")
